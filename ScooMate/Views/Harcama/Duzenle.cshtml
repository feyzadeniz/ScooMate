@model ScooMate.Models.Harcama

<div class="container">
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2 class="card-title mb-0">Harcama Düzenle</h2>
                <div>
                    <a href="@Url.Action("Detay", "Kategori", new { id = Model.KategoriID })" class="btn btn-outline-primary me-2">
                        <i class="fas fa-arrow-left me-1"></i> Kategoriye Dön
                    </a>
                    <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#silModal">
                        <i class="fas fa-trash-alt me-1"></i> Sil
                    </button>
                </div>
            </div>

      @if (!ViewData.ModelState.IsValid)
      {
                  <div class="alert alert-danger">
          @Html.ValidationSummary(false)
                  </div>
      }

      @using (Html.BeginForm())
      {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.HarcamaID)
        @Html.HiddenFor(m => m.KategoriID)

                  <div class="form-group mb-3">
                      <label for="Miktar">Miktar (TL)</label>
          @Html.TextBoxFor(m => m.Miktar, new { @class = "form-control", type = "number", step = "0.01", required = "required" })
          @Html.ValidationMessageFor(m => m.Miktar, "", new { @class = "text-danger" })
                  </div>

                  <div class="form-group mb-3">
                      <label for="Tarih">Tarih</label>
          @Html.TextBoxFor(m => m.Tarih, new { @class = "form-control", type = "date", required = "required" })
          @Html.ValidationMessageFor(m => m.Tarih, "", new { @class = "text-danger" })
                  </div>

                  <div class="form-group mb-3">
                      <label for="Aciklama">Açıklama</label>
          @Html.TextBoxFor(m => m.Aciklama, new { @class = "form-control" })
          @Html.ValidationMessageFor(m => m.Aciklama, "", new { @class = "text-danger" })
                  </div>

                  <div class="mt-3">
                      <button type="submit" class="btn btn-primary">
                          <i class="fas fa-save me-1"></i> Kaydet
                      </button>
                      <a href="@Url.Action("Detay", "Kategori", new { id = Model.KategoriID })" class="btn btn-secondary">
                          <i class="fas fa-times me-1"></i> İptal
                      </a>
                  </div>
      }
        </div>
    </div>
</div>

<!-- Silme Onay Modalı -->
<div class="modal fade" id="silModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Harcama Sil</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="text-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Dikkat:</strong> Bu harcamayı silmek istediğinizden emin misiniz?
                </p>
                <p>Bu işlem geri alınamaz.</p>
            </div>
            <div class="modal-footer">
        @using (Html.BeginForm("Sil", "Harcama", new { id = Model.HarcamaID }, FormMethod.Post))
        {
          @Html.AntiForgeryToken()
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                      <button type="submit" class="btn btn-danger">
                          <i class="fas fa-trash-alt me-1"></i> Sil
                      </button>
        }
            </div>
        </div>
    </div>
</div> 