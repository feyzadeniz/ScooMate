// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScooMate.Data;

#nullable disable

namespace ScooMate.Migrations
{
    [DbContext(typeof(ScoomateContext))]
    [Migration("20250116102818_YatirimEklendi")]
    partial class YatirimEklendi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScooMate.Models.Bildirim", b =>
                {
                    b.Property<int>("BildirimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BildirimID"));

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Okundu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Yildizli")
                        .HasColumnType("bit");

                    b.HasKey("BildirimID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("BildirimlerNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.BorcTakip", b =>
                {
                    b.Property<int>("BorcID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorcID"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("BildirimGonderildi")
                        .HasColumnType("bit");

                    b.Property<string>("BorcAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BorcTipi")
                        .HasColumnType("int");

                    b.Property<int>("HesapKesimGunu")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<bool>("OtomatikOdeme")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OtomatikOdemeTutari")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SonOdemeGunu")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BorcID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("BorcTakiplerNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.ButceKalem", b =>
                {
                    b.Property<int>("ButceKalemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButceKalemID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ButcePlanlamaID")
                        .HasColumnType("int");

                    b.Property<bool>("IsGelir")
                        .HasColumnType("bit");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ButceKalemID");

                    b.HasIndex("ButcePlanlamaID");

                    b.ToTable("ButceKalemlerNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.ButcePlanlama", b =>
                {
                    b.Property<int>("ButcePlanlamaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButcePlanlamaID"));

                    b.Property<decimal>("Gelirler")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<decimal>("KullanilabilirLimit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TemelGiderler")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ButcePlanlamaID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("ButcePlanlamalarNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.FaturaTakip", b =>
                {
                    b.Property<int>("FaturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturaID"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("BildirimGonderildi")
                        .HasColumnType("bit");

                    b.Property<string>("FaturaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FaturaKesimGunu")
                        .HasColumnType("int");

                    b.Property<int>("FaturaTipi")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<bool>("OtomatikOdeme")
                        .HasColumnType("bit");

                    b.Property<int>("SonOdemeGunu")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FaturaID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("FaturaTakiplerNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.Harcama", b =>
                {
                    b.Property<int>("HarcamaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HarcamaID"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("HarcamaID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("HarcamalarNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.IstatistikKayit", b =>
                {
                    b.Property<int>("IstatistikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IstatistikID"));

                    b.Property<decimal>("AylikToplamHarcama")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Donem")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnYuksekHarcamaDetaylari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GunlukOrtalamaHarcama")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KategorikHarcamaDetaylari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("YillikOzetDetaylari")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IstatistikID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("IstatistikKayitlariNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<string>("OzelSimgeDosyasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Simge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("KategorilerNew", (string)null);

                    b.HasData(
                        new
                        {
                            KategoriID = 1,
                            Aciklama = "Yemek harcamaları",
                            KategoriAdi = "Yemek"
                        },
                        new
                        {
                            KategoriID = 2,
                            Aciklama = "Ulaşım harcamaları",
                            KategoriAdi = "Ulaşım"
                        },
                        new
                        {
                            KategoriID = 3,
                            Aciklama = "Market alışverişleri",
                            KategoriAdi = "Market"
                        });
                });

            modelBuilder.Entity("ScooMate.Models.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciID");

                    b.ToTable("KullanicilarNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.Yatirim", b =>
                {
                    b.Property<int>("YatirimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YatirimID"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tur")
                        .HasColumnType("int");

                    b.HasKey("YatirimID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("YatirimlarNew", (string)null);
                });

            modelBuilder.Entity("ScooMate.Models.Bildirim", b =>
                {
                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.BorcTakip", b =>
                {
                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.ButceKalem", b =>
                {
                    b.HasOne("ScooMate.Models.ButcePlanlama", "ButcePlanlama")
                        .WithMany("Kalemler")
                        .HasForeignKey("ButcePlanlamaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ButcePlanlama");
                });

            modelBuilder.Entity("ScooMate.Models.ButcePlanlama", b =>
                {
                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.FaturaTakip", b =>
                {
                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.Harcama", b =>
                {
                    b.HasOne("ScooMate.Models.Kategori", "Kategori")
                        .WithMany("Harcamalar")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.IstatistikKayit", b =>
                {
                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.Kategori", b =>
                {
                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.Yatirim", b =>
                {
                    b.HasOne("ScooMate.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ScooMate.Models.ButcePlanlama", b =>
                {
                    b.Navigation("Kalemler");
                });

            modelBuilder.Entity("ScooMate.Models.Kategori", b =>
                {
                    b.Navigation("Harcamalar");
                });
#pragma warning restore 612, 618
        }
    }
}
